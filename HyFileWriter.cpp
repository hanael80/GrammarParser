////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file	HyFileWriter.cpp
///
/// @brief	HyFileWriter 클래스의 소스 파일
///
/// @date	2012-12-14
////////////////////////////////////////////////////////////////////////////////////////////////////


#include "PCH.h"
#include "HyFileWriter.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	생성자
////////////////////////////////////////////////////////////////////////////////////////////////////
HyFileWriter::HyFileWriter()
:
m_file( NULL )
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	생성자
///
/// @param	filePath	파일 경로
////////////////////////////////////////////////////////////////////////////////////////////////////
HyFileWriter::HyFileWriter( const HyString& filePath, const HyChar* mode )
{
	m_file = fopen( filePath.c_str(), mode );
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	소멸자
////////////////////////////////////////////////////////////////////////////////////////////////////
HyFileWriter::~HyFileWriter()
{
	if ( !m_file )
		return;

	Close();
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	기록한다.
///
/// @param	data	데이터
/// @param	size	크기
///
/// @return	작업을 성공적으로 수행했으면 true, 그렇지 않으면 false를 반환한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
HyBool HyFileWriter::Write( HyVoid* data, HyUInt32 size )
{
	if ( !m_file )
		return false;

	HyUInt32 totalSize = 0;
	while ( totalSize < size )
	{
		HyInt32 curSize = fwrite( (HyChar*)(data) + totalSize , 1, size - totalSize, m_file );
		if ( curSize <= 0 )
			return false;

		totalSize += curSize;
	}

	return true;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	닫는다.
///
/// @return	반환 값 없음
////////////////////////////////////////////////////////////////////////////////////////////////////
HyVoid HyFileWriter::Close()
{
	if ( !m_file )
		return;

	fclose( m_file );
	m_file = NULL;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	형식을 이용해서 기록한다.
///
/// @param	format	형식
///
/// @return	작업을 성공적으로 수행했으면 true, 그렇지 않으면 false를 반환한다.
////////////////////////////////////////////////////////////////////////////////////////////////////
HyBool HyFileWriter::WriteFormat( const HyChar* format, ... )
{
	HY_ENSURE( m_file, return false );

	va_list args;
	char buf[ 1024 * 8 ];
	va_start( args, format );
	vsprintf( buf, format, args );
	fprintf( m_file, buf );

	return true;
}
